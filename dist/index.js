import{createElement as t,Component as e}from"react";import{line as r,select as n,min as a,max as o,axisLeft as i,scaleLinear as l}from"d3";import{scaleLinear as s}from"d3-scale";function d(t){for(var e=t.input,r=t.output,n=e.up,a=e.down,o=r.entities,i=r.ranks,l=new Array,s=0;s<i.length;s++)n.includes(o[s])?(l.push({x:i[s],y:-(i[s]-i.length/2)/(i.length/2),b:1}),console.log("1")):a.includes(o[s])?l.push({x:i[s],y:-(i[s]-i.length/2)/(i.length/2),b:-1}):l.push({x:i[s],y:-(i[s]-i.length/2)/(i.length/2),b:0});return l.sort(function(t,e){return e.x-t.x}),l.columns=["x","y","b"],l}var p=function(e){function d(d){var p=this;e.call(this,d),this.componentWillReceiveProps=function(t){p.plotReactGSEA()},this.updateRef=function(t){void 0===p.state.ref&&void 0!==t&&p.setState({ref:t},function(){void 0!==p.props.svgRef&&p.props.svgRef(t),p.plotReactGSEA()})},this.plotReactGSEA=function(){var t=p.state.ref,e=p.props.data;if(void 0!==t){for(;t.firstChild;)t.removeChild(t.firstChild);var d=[],h=[],y=s().range([0,410]),c=s().range([200,0]),f=r().x(function(t){return y(t.x)}).y(function(t){return c(t.y)}),x=n(t).append("g").attr("id","ReactGSEAs").attr("width",500).attr("height",230).attr("transform","translate(70,20)"),u=n(t).append("g").attr("id","enrichsvg").attr("width",500).attr("height",130).attr("transform","translate(70,240)");d=new Array(e.length+1),h=new Array(e.length+1),d[0]=0,h[0]=0;for(var g=1,m=0,k=e;m<k.length;m+=1){var w=k[m];w.x=+w.x,w.y=+w.y,w.b=+w.b,1==w.b?(d[g]=d[g-1]+1,h[g]=h[g-1]):-1==w.b?(d[g]=d[g-1],h[g]=h[g-1]+1):(d[g]=d[g-1],h[g]=h[g-1]),g++}for(var b=d[d.length-1],v=h[h.length-1],R=[],A=[],S=0,E=0,G=0;G<d.length;G++)d[G]=(d[G]-b/d.length)/b-G/d.length,h[G]=(h[G]-v/h.length)/v-G/h.length,d[G]<S?S=d[G]:h[G]<S&&(S=h[G]),d[G]>E?E=d[G]:h[G]>E&&(E=h[G]),R.push({x:G,y:+d[G]}),A.push({x:G,y:+h[G]});var _=r().x(function(t){return y(t.x)}).y(function(t){return c(t.y)});y.domain([a(e,function(t){return t.x}),o(e,function(t){return t.x})]),c.domain([S,E]),console.log(E,S),x.append("line").style("stroke","black").style("stroke-width","2").attr("x1",-1).attr("y1",E/(E-S)*200).attr("x2",411).attr("y2",E/(E-S)*200);var C=95*o(e,function(t){return t.y})/(o(e,function(t){return t.y})-a(e,function(t){return t.y}));u.append("line").style("stroke","black").style("stroke-width","2").attr("x1",-1).attr("y1",C).attr("x2",411).attr("y2",C),x.append("path").data([R]).attr("class","upline").attr("d",_),x.append("path").data([A]).attr("class","downline").attr("d",_),x.append("g").attr("transform","translate(-5,0)").style("font","16px arial").call(i(c).ticks(6)).style("stroke-width","2"),x.append("text").attr("transform","rotate(-90)").attr("y",-70).attr("x",-122.5).attr("dy","1em").style("text-anchor","middle").text("Enrichment Score"),x.append("rect").attr("x",296).attr("y",-4).attr("width",114).attr("height",42).attr("fill","white").style("opacity",.6),x.append("rect").attr("x",300).attr("y",0).attr("width",14).attr("height",14).attr("fill","dodgerblue"),x.append("text").attr("y",11).attr("x",320).style("text-anchor","start").text("up genes"),x.append("rect").attr("x",300).attr("y",20).attr("width",14).attr("height",14).attr("fill","firebrick"),x.append("text").attr("y",32).attr("x",320).style("text-anchor","start").text("down genes"),(c=l().range([95,0])).domain([a(e,function(t){return t.y}),o(e,function(t){return t.y})]),u.append("path").data([e]).attr("class","line").attr("d",f);for(var j=0;j<e.length;j++)1==e[j].b?u.append("line").style("stroke","dodgerblue").style("stroke-width","2").attr("x1",205).attr("y1",C-30).attr("x2",205).attr("y2",C-1).transition().duration(500).attr("x1",410*j/(e.length-1)).attr("y1",C-30).attr("x2",410*j/(e.length-1)).attr("y2",C-1):-1==e[j].b&&u.append("line").style("stroke","firebrick").style("stroke-width","2").attr("x1",205).attr("y1",C+30).attr("x2",205).attr("y2",C+1).transition().duration(500).attr("x1",410*j/(e.length-1)).attr("y1",C+30).attr("x2",410*j/(e.length-1)).attr("y2",C+1);u.append("g").attr("transform","translate(-5,0)").style("font","16px arial").call(i(c).ticks(3)).style("stroke-width","2"),u.append("text").attr("transform","rotate(-90)").attr("y",-70).attr("x",-47.5).attr("dy","1em").style("text-anchor","middle").text("Gene Weights"),u.append("rect").attr("y",11.5).attr("x",169).attr("width",72).attr("height",22).attr("fill","white").style("opacity",.6),u.append("text").attr("y",27.5).attr("x",205).style("text-anchor","middle").text("up genes"),u.append("rect").attr("y",71.5).attr("x",159).attr("width",92).attr("height",22).attr("fill","white").style("opacity",.6),u.append("text").attr("y",87.5).attr("x",205).style("text-anchor","middle").text("down genes")}},this.render=function(){return t("div",null,t("style",{jsx:!0,global:!0},"\n        .line {\n          fill: none;\n          stroke: black;\n          stroke-width: 4px;\n        }\n\n        .upline {\n          fill: none;\n          stroke: dodgerblue ;\n          stroke-width: 4px;\n        }\n\n        .downline {\n          fill: none;\n          stroke: firebrick;\n          stroke-width: 4px;\n        }\n\n        .body {\n          width: 500px;\n          height: 350px;\n        }\n\n        @keyframes dash{\n            from{\n                stroke-dashoffset: 1000;\n            }\n            to{\n                stroke-dashoffset: 0;\n            }\n        }\n\n        .body {\n          font-family: 'Roboto', sans-serif;\n        }\n      "),void 0===p.state.ref?t("div",null,"Loading..."):null,t("svg",{ref:p.updateRef,className:"body"}))},this.state={}}return e&&(d.__proto__=e),(d.prototype=Object.create(e&&e.prototype)).constructor=d,d}(e);export default p;export{d as dataFromResults,p as ReactGSEA};
//# sourceMappingURL=index.js.map
